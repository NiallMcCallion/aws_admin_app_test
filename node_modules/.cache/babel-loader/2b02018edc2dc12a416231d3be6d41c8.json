{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmcca\\\\source\\\\repos\\\\AWS.eForms\\\\AWS.eForms.ReactApp\\\\src\\\\forms\\\\ContactUsPathways\\\\Declaration.js\";\nimport React from 'react';\nimport getContactUsDeclarationFormView from 'data/ContactUs-Declaration-FormView';\nimport getContactUsNameErrorList from 'data/ContactUs-Name-ErrorList';\nimport TextInputLcc from 'views/components/inputs/TextInputLcc';\nimport MultiCheckboxInputLcc from 'views/components/inputs/MultiCheckboxInputLcc';\nimport RadioInputLcc from 'views/components/inputs/RadioInputLcc';\nimport TextareaInputLcc from 'views/components/inputs/TextareaInputLcc';\nimport DateInputLcc from 'views/components/inputs/DateInputLcc';\nimport TimeInputLcc from 'views/components/inputs/TimeInputLcc';\nimport FileUploadInputLcc from 'views/components/inputs/FileUploadInputLcc';\nimport DropdownInputLcc from 'views/components/inputs/DropdownInputLcc';\nimport CheckboxInputLcc from 'views/components/inputs/CheckboxInputLcc';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Declaration extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      errors: []\n    };\n\n    this.validateForm = () => {\n      let errors = [];\n      let formIsValid = true; //Will be a lambda\n\n      let contactUsNameErrorList = getContactUsNameErrorList();\n      formIsValid = contactUsNameErrorList.errorList.length > 0 ? false : true;\n      errors = contactUsNameErrorList.errorList;\n      this.setState({\n        errors\n      });\n      return formIsValid;\n    };\n\n    this.onCheckErrors = event => {\n      //event.preventDefault();\n      if (this.validateForm()) {\n        console.log(\"valid\", this.state.errors);\n      } else {\n        console.log(\"invalid\", this.state.errors);\n      }\n    };\n  }\n\n  render() {\n    let contactUsDeclarationFormView = getContactUsDeclarationFormView(); //Will be call to lambda\n\n    let qnCount = contactUsDeclarationFormView.questions.length;\n    const components = {\n      CheckboxInputLcc: CheckboxInputLcc,\n      TextInputLcc: TextInputLcc,\n      MultiCheckboxInputLcc: MultiCheckboxInputLcc,\n      RadioInputLcc: RadioInputLcc,\n      TextareaInputLcc: TextareaInputLcc,\n      DateInputLcc: DateInputLcc,\n      TimeInputLcc: TimeInputLcc,\n      FileUploadInputLcc: FileUploadInputLcc,\n      DropdownInputLcc: DropdownInputLcc\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [qnCount > 1 || contactUsDeclarationFormView.questions[0].componentType === \"CheckboxInputLcc\" ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading-large\",\n        children: contactUsDeclarationFormView.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 23\n      }, this) : null, contactUsDeclarationFormView.questions.map(question => {\n        const ComponentType = components[question.componentType];\n        let componentErrors = [];\n        let thisQuestionsErrors = this.state.errors.filter(e => e.id === question.id);\n\n        if (thisQuestionsErrors.length > 0) {\n          componentErrors = thisQuestionsErrors[0].errors;\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${componentErrors.length > 0 ? \"form-group-error\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(ComponentType, {\n            qnData: question,\n            qnCount: qnCount,\n            errors: componentErrors\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-small\",\n          id: \"TestErrors\",\n          onClick: this.onCheckErrors,\n          children: \" Check errors (for now) \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"names":["React","getContactUsDeclarationFormView","getContactUsNameErrorList","TextInputLcc","MultiCheckboxInputLcc","RadioInputLcc","TextareaInputLcc","DateInputLcc","TimeInputLcc","FileUploadInputLcc","DropdownInputLcc","CheckboxInputLcc","Declaration","Component","state","errors","validateForm","formIsValid","contactUsNameErrorList","errorList","length","setState","onCheckErrors","event","console","log","render","contactUsDeclarationFormView","qnCount","questions","components","componentType","displayName","map","question","ComponentType","componentErrors","thisQuestionsErrors","filter","e","id"],"sources":["C:/Users/nmcca/source/repos/AWS.eForms/AWS.eForms.ReactApp/src/forms/ContactUsPathways/Declaration.js"],"sourcesContent":["import React from 'react';\r\nimport getContactUsDeclarationFormView from 'data/ContactUs-Declaration-FormView';\r\nimport getContactUsNameErrorList from 'data/ContactUs-Name-ErrorList';\r\nimport TextInputLcc from 'views/components/inputs/TextInputLcc';\r\nimport MultiCheckboxInputLcc from 'views/components/inputs/MultiCheckboxInputLcc';\r\nimport RadioInputLcc from 'views/components/inputs/RadioInputLcc';\r\nimport TextareaInputLcc from 'views/components/inputs/TextareaInputLcc';\r\nimport DateInputLcc from 'views/components/inputs/DateInputLcc';\r\nimport TimeInputLcc from 'views/components/inputs/TimeInputLcc';\r\nimport FileUploadInputLcc from 'views/components/inputs/FileUploadInputLcc';\r\nimport DropdownInputLcc from 'views/components/inputs/DropdownInputLcc';\r\nimport CheckboxInputLcc from 'views/components/inputs/CheckboxInputLcc';\r\n\r\nexport default class Declaration extends React.Component {\r\n    state = {\r\n        errors: []\r\n    }\r\n\r\n    validateForm = () => {\r\n        let errors = []\r\n        let formIsValid = true\r\n\r\n        //Will be a lambda\r\n        let contactUsNameErrorList = getContactUsNameErrorList();\r\n\r\n        formIsValid = contactUsNameErrorList.errorList.length > 0 ? false : true;\r\n        errors = contactUsNameErrorList.errorList;\r\n\r\n        this.setState({ errors })\r\n\r\n        return formIsValid\r\n    }\r\n    //This won't be here, just for dev purposes - will be on submit\r\n    onCheckErrors = event => {\r\n        //event.preventDefault();\r\n        if (this.validateForm()) {\r\n            console.log(\"valid\", this.state.errors);\r\n        }\r\n        else {\r\n            console.log(\"invalid\", this.state.errors);\r\n        }\r\n\r\n    };\r\n    render() {\r\n        let contactUsDeclarationFormView = getContactUsDeclarationFormView(); //Will be call to lambda\r\n        let qnCount = contactUsDeclarationFormView.questions.length;\r\n\r\n        const components = {\r\n            CheckboxInputLcc: CheckboxInputLcc,\r\n            TextInputLcc: TextInputLcc,\r\n            MultiCheckboxInputLcc: MultiCheckboxInputLcc,\r\n            RadioInputLcc: RadioInputLcc,\r\n            TextareaInputLcc: TextareaInputLcc,\r\n            DateInputLcc: DateInputLcc,\r\n            TimeInputLcc: TimeInputLcc,\r\n            FileUploadInputLcc: FileUploadInputLcc,\r\n            DropdownInputLcc: DropdownInputLcc\r\n        };\r\n\r\n        return (\r\n            <>\r\n                {qnCount > 1 || contactUsDeclarationFormView.questions[0].componentType === \"CheckboxInputLcc\"\r\n                    ? <h1 className=\"heading-large\">{contactUsDeclarationFormView.displayName}</h1>\r\n                    : null}\r\n                {contactUsDeclarationFormView.questions.map((question) => {\r\n                    const ComponentType = components[question.componentType];\r\n                    let componentErrors = [];\r\n                    let thisQuestionsErrors = this.state.errors.filter(e => e.id === question.id);\r\n                    if (thisQuestionsErrors.length > 0) {\r\n                        componentErrors = thisQuestionsErrors[0].errors;\r\n                    }\r\n                    return (\r\n                        <div className={`form-group ${componentErrors.length > 0 ? \"form-group-error\" : \"\"}`}>\r\n                            <ComponentType key={question.id} qnData={question} qnCount={qnCount} errors={componentErrors} />\r\n                        </div>\r\n                    );\r\n                })\r\n                }\r\n                <div>\r\n                    <button className=\"btn btn-primary btn-small\" id=\"TestErrors\" onClick={this.onCheckErrors}> Check errors (for now) </button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}