{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmcca\\\\source\\\\repos\\\\AWS.eForms\\\\AWS.eForms.ReactApp\\\\src\\\\views\\\\components\\\\inputs\\\\Radio.js\";\nimport React from 'react';\nimport CheckboxInputLcc from 'views/components/inputs/Checkbox';\nimport QuestionLabelLcc from '../display/QuestionLabel';\nimport ErrorMessageLcc from 'views/components/display/ErrorMessage';\nimport TextInputLcc from './Text';\nimport TextareaInputLcc from './Textarea';\nimport HintLcc from '../display/Hint';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class RadioInputLcc extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: this.props.qnData.values.map(value => {\n          return (\n            /*#__PURE__*/\n            //Either need to rename CheckboxInputLcc to use for both, or create new if props are different\n            _jsxDEV(CheckboxInputLcc, {\n              qnData: value,\n              errors: []\n            }, value.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this)\n          );\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nclass RadioInputLcc2 extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedOption: \"\"\n    };\n    this.onChangeValue = this.onChangeValue.bind(this);\n  }\n\n  onChangeValue(event) {\n    this.setState({\n      selectedOption: event.target.value\n    });\n  }\n\n  render() {\n    const components = {\n      TextInputLcc: TextInputLcc,\n      TextareaInputLcc: TextareaInputLcc\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(QuestionLabelLcc, {\n          qnData: this.props.qnData,\n          qnCount: this.props.qnCount,\n          useLegend: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessageLcc, {\n          errors: this.props.errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.props.qnData.values.map(value => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block-label\",\n                htmlFor: value.name,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: value.inputType,\n                  id: value.id,\n                  name: value.name,\n                  value: value.value,\n                  onChange: this.onChangeValue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"form-label-bold\",\n                  children: value.displayName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), value.childQuestions.map(question => {\n                //Will be passed down\n                let componentErrors = [];\n                const ComponentType = components[question.componentType];\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"panel panel-border-narrow\",\n                  style: value.value === this.state.selectedOption ? {} : {\n                    display: 'none'\n                  },\n                  id: \"PanelToShow\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `form-group ${componentErrors.length > 0 ? \"form-group-error\" : \"\"}`,\n                    children: /*#__PURE__*/_jsxDEV(ComponentType, {\n                      qnData: question,\n                      showHeadingOnComponent: false,\n                      errors: componentErrors,\n                      onValueChange: this.props.onValueChange //{...values}\n\n                    }, question.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 25\n                  }, this)\n                }, question.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, value.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"names":["React","CheckboxInputLcc","QuestionLabelLcc","ErrorMessageLcc","TextInputLcc","TextareaInputLcc","HintLcc","RadioInputLcc","Component","render","props","qnData","values","map","value","id","RadioInputLcc2","constructor","state","selectedOption","onChangeValue","bind","event","setState","target","components","qnCount","errors","name","inputType","displayName","childQuestions","question","componentErrors","ComponentType","componentType","display","length","onValueChange"],"sources":["C:/Users/nmcca/source/repos/AWS.eForms/AWS.eForms.ReactApp/src/views/components/inputs/Radio.js"],"sourcesContent":["import React from 'react';\r\nimport CheckboxInputLcc from 'views/components/inputs/Checkbox';\r\nimport QuestionLabelLcc from '../display/QuestionLabel';\r\nimport ErrorMessageLcc from 'views/components/display/ErrorMessage';\r\nimport TextInputLcc from './Text';\r\nimport TextareaInputLcc from './Textarea';\r\nimport HintLcc from '../display/Hint';\r\n\r\nexport default class RadioInputLcc extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <fieldset>\r\n\r\n          {this.props.qnData.values.map((value) => {\r\n            return (\r\n              //Either need to rename CheckboxInputLcc to use for both, or create new if props are different\r\n              <CheckboxInputLcc key={value.id} qnData={value} errors={[]} />\r\n            );\r\n          })\r\n          }\r\n        </fieldset>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass RadioInputLcc2 extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selectedOption: \"\"\r\n    };\r\n    this.onChangeValue = this.onChangeValue.bind(this);\r\n  }\r\n  onChangeValue(event) {\r\n    this.setState({\r\n      selectedOption: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const components = {\r\n      TextInputLcc: TextInputLcc,\r\n      TextareaInputLcc: TextareaInputLcc\r\n    };\r\n    return (\r\n      <>\r\n        <fieldset>\r\n          <QuestionLabelLcc qnData={this.props.qnData} qnCount={this.props.qnCount} useLegend={true} />\r\n\r\n          <ErrorMessageLcc errors={this.props.errors} />\r\n\r\n          <div>\r\n            {this.props.qnData.values.map((value) => {\r\n              return (\r\n                <div key={value.id}>\r\n                  <label className=\"block-label\" htmlFor={value.name}>\r\n                    <input type={value.inputType} id={value.id} name={value.name} value={value.value} onChange={this.onChangeValue} />\r\n                    <span className=\"form-label-bold\">{value.displayName}</span>\r\n                  </label>\r\n                  {value.childQuestions.map((question) => {\r\n                    //Will be passed down\r\n                    let componentErrors = [];\r\n                    const ComponentType = components[question.componentType];\r\n                    return (\r\n                      <div key={question.id} className={\"panel panel-border-narrow\"}\r\n                        style={value.value === this.state.selectedOption ? {} : { display: 'none' }}\r\n                        id=\"PanelToShow\">\r\n                        <div className={`form-group ${componentErrors.length > 0 ? \"form-group-error\" : \"\"}`}>\r\n                          <ComponentType key={question.id} qnData={question} showHeadingOnComponent={false} errors={componentErrors}\r\n                            onValueChange={this.props.onValueChange} //{...values}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                    );\r\n                  })\r\n                  }\r\n                </div>\r\n              );\r\n            })\r\n            }\r\n          </div>\r\n        </fieldset>\r\n      </>\r\n    );\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}