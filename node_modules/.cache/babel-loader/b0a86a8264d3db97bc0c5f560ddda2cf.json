{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmcca\\\\source\\\\repos\\\\AWS.eForms\\\\AWS.eForms.ReactApp\\\\src\\\\views\\\\formLayout\\\\PageBase.js\";\nimport React from 'react';\nimport { Navigate } from \"react-router-dom\";\nimport getContactUsErrorList from 'data/ContactUs-ErrorList';\nimport withRouterHooks from 'helpers/withRouterHooks';\nimport TextInputLcc from 'views/components/inputs/Text';\nimport MultiCheckboxInputLcc from 'views/components/inputs/MultiCheckbox';\nimport RadioInputLcc from 'views/components/inputs/Radio';\nimport TextareaInputLcc from 'views/components/inputs/Textarea';\nimport DateInputLcc from 'views/components/inputs/Date';\nimport TimeInputLcc from 'views/components/inputs/Time';\nimport FileUploadInputLcc from 'views/components/inputs/FileUpload';\nimport DropdownInputLcc from 'views/components/inputs/Dropdown';\nimport CheckboxInputLcc from 'views/components/inputs/Checkbox';\nimport ParagraphLcc from 'views/components/inputs/Paragraph';\nimport ErrorSummaryLcc from 'views/components/display/ErrorSummary';\nimport HeaderLarge from 'views/components/display/HeaderLarge';\nimport Summary from 'views/shared/Summary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PageBase extends React.Component {\n  constructor(props) {\n    super(props); //If controlled form will need all fields from json\n    //let [page] = this.props.outletContext;\n\n    this.validateForm = () => {\n      let errors = [];\n      let formIsValid = true; //Call a lambda instead here where pass form name and page and values\n      //Will only bring for that page really\n\n      let contactUsErrorList = getContactUsErrorList();\n      formIsValid = contactUsErrorList.errorList.length > 0 ? false : true;\n      errors = contactUsErrorList.errorList;\n      this.setState({\n        errors\n      });\n      return formIsValid;\n    };\n\n    this.onCheckErrors = event => {\n      event.preventDefault();\n\n      if (this.validateForm()) {\n        console.log(\"valid\", this.state.errors);\n      } else {\n        console.log(\"invalid\", this.state.errors);\n      }\n    };\n\n    this.state = {\n      FirstName: '',\n      Surname: '',\n      errors: []\n      /*page: page*/\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n  } //This will probably move\n\n\n  handleChange(e) {\n    //Lifting up - top level\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    if (this.props.params.page === 'Summary') {\n      let FormPage = require(\"../shared/Summary\").default;\n    }\n\n    let formJson = require(\"../../forms/\" + this.props.params.form + \"/Config.json\"); //Will be call to lambda\n\n\n    let page = formJson.pages.find(page => page.name === this.props.params.page);\n    let showQuestionLabel = page.questions.length > 1; // || (page.questions[0].componentType === \"Checkbox\" ? false : true);\n\n    if (page === undefined) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/ErrorNotFound\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 14\n      }, this);\n    }\n\n    const components = {\n      Checkbox: CheckboxInputLcc,\n      Text: TextInputLcc,\n      MultiCheckbox: MultiCheckboxInputLcc,\n      Radio: RadioInputLcc,\n      Textarea: TextareaInputLcc,\n      Date: DateInputLcc,\n      Time: TimeInputLcc,\n      FileUpload: FileUploadInputLcc,\n      Dropdown: DropdownInputLcc,\n      Paragraph: ParagraphLcc,\n      Summary: Summary\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [showQuestionLabel ? /*#__PURE__*/_jsxDEV(HeaderLarge, {\n        displayName: page.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this) : null, this.state.errors.length > 0 ? /*#__PURE__*/_jsxDEV(ErrorSummaryLcc, {\n        errors: this.state.errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this) : null, page.questions.map(question => {\n        const ComponentType = components[question.componentType];\n        let componentErrors = [];\n        let thisQuestionsErrors = this.state.errors.filter(e => e.id === question.name);\n\n        if (thisQuestionsErrors.length > 0) {\n          componentErrors = thisQuestionsErrors[0].errors;\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${componentErrors.length > 0 ? \"form-group-error\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(ComponentType, {\n            qnData: question,\n            showQuestionLabel: showQuestionLabel,\n            errors: componentErrors,\n            onValueChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, question.name + \"FormGroup\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-small\",\n          id: \"TestErrors\",\n          onClick: this.onCheckErrors,\n          children: \" Check errors (for now) \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withRouterHooks(PageBase);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Navigate","getContactUsErrorList","withRouterHooks","TextInputLcc","MultiCheckboxInputLcc","RadioInputLcc","TextareaInputLcc","DateInputLcc","TimeInputLcc","FileUploadInputLcc","DropdownInputLcc","CheckboxInputLcc","ParagraphLcc","ErrorSummaryLcc","HeaderLarge","Summary","PageBase","Component","constructor","props","validateForm","errors","formIsValid","contactUsErrorList","errorList","length","setState","onCheckErrors","event","preventDefault","console","log","state","FirstName","Surname","handleChange","bind","e","target","value","type","checked","name","render","params","page","FormPage","require","default","formJson","form","pages","find","showQuestionLabel","questions","undefined","components","Checkbox","Text","MultiCheckbox","Radio","Textarea","Date","Time","FileUpload","Dropdown","Paragraph","displayName","map","question","ComponentType","componentType","componentErrors","thisQuestionsErrors","filter","id"],"sources":["C:/Users/nmcca/source/repos/AWS.eForms/AWS.eForms.ReactApp/src/views/formLayout/PageBase.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport getContactUsErrorList from 'data/ContactUs-ErrorList';\r\nimport withRouterHooks from 'helpers/withRouterHooks';\r\n\r\nimport TextInputLcc from 'views/components/inputs/Text';\r\nimport MultiCheckboxInputLcc from 'views/components/inputs/MultiCheckbox';\r\nimport RadioInputLcc from 'views/components/inputs/Radio';\r\nimport TextareaInputLcc from 'views/components/inputs/Textarea';\r\nimport DateInputLcc from 'views/components/inputs/Date';\r\nimport TimeInputLcc from 'views/components/inputs/Time';\r\nimport FileUploadInputLcc from 'views/components/inputs/FileUpload';\r\nimport DropdownInputLcc from 'views/components/inputs/Dropdown';\r\nimport CheckboxInputLcc from 'views/components/inputs/Checkbox';\r\nimport ParagraphLcc from 'views/components/inputs/Paragraph';\r\nimport ErrorSummaryLcc from 'views/components/display/ErrorSummary';\r\nimport HeaderLarge from 'views/components/display/HeaderLarge';\r\nimport Summary from 'views/shared/Summary';\r\n\r\nclass PageBase extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //If controlled form will need all fields from json\r\n    //let [page] = this.props.outletContext;\r\n    this.state = { FirstName: '', Surname: '', errors: [], /*page: page*/ };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  //This will probably move\r\n  handleChange(e) {\r\n    //Lifting up - top level\r\n    const target = e.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  validateForm = () => {\r\n    let errors = [];\r\n    let formIsValid = true;\r\n\r\n    //Call a lambda instead here where pass form name and page and values\r\n    //Will only bring for that page really\r\n    let contactUsErrorList = getContactUsErrorList();\r\n    formIsValid = contactUsErrorList.errorList.length > 0 ? false : true;\r\n    errors = contactUsErrorList.errorList;\r\n    this.setState({ errors });\r\n\r\n    return formIsValid;\r\n  };\r\n\r\n  //This won't be here, just for dev purposes - will be on submit\r\n  onCheckErrors = event => {\r\n    event.preventDefault();\r\n    if (this.validateForm()) {\r\n      console.log(\"valid\", this.state.errors);\r\n    }\r\n    else {\r\n      console.log(\"invalid\", this.state.errors);\r\n    }\r\n\r\n  };\r\n\r\n  render() {\r\n    if (this.props.params.page === 'Summary') {\r\n      let FormPage = require(\"../shared/Summary\").default;\r\n    }\r\n    let formJson = require(\"../../forms/\" + this.props.params.form + \"/Config.json\"); //Will be call to lambda\r\n    let page = formJson.pages.find(page => page.name === this.props.params.page);\r\n\r\n\r\n    let showQuestionLabel = page.questions.length > 1;// || (page.questions[0].componentType === \"Checkbox\" ? false : true);\r\n\r\n    if (page === undefined) {\r\n      return <Navigate to=\"/ErrorNotFound\" />;\r\n    }\r\n\r\n    const components = {\r\n      Checkbox: CheckboxInputLcc,\r\n      Text: TextInputLcc,\r\n      MultiCheckbox: MultiCheckboxInputLcc,\r\n      Radio: RadioInputLcc,\r\n      Textarea: TextareaInputLcc,\r\n      Date: DateInputLcc,\r\n      Time: TimeInputLcc,\r\n      FileUpload: FileUploadInputLcc,\r\n      Dropdown: DropdownInputLcc,\r\n      Paragraph: ParagraphLcc,\r\n\r\n      Summary: Summary\r\n    };\r\n\r\n    return (\r\n      <>\r\n        {showQuestionLabel\r\n          ? <HeaderLarge displayName={page.displayName} />\r\n          : null}\r\n\r\n        {(this.state.errors.length > 0)\r\n          ? <ErrorSummaryLcc errors={this.state.errors} />\r\n          : null}\r\n\r\n        {page.questions.map((question) => {\r\n          const ComponentType = components[question.componentType];\r\n          let componentErrors = [];\r\n          let thisQuestionsErrors = this.state.errors.filter(e => e.id === question.name);\r\n          if (thisQuestionsErrors.length > 0) {\r\n            componentErrors = thisQuestionsErrors[0].errors;\r\n          }\r\n\r\n          return (\r\n            <div key={question.name + \"FormGroup\"} className={`form-group ${componentErrors.length > 0 ? \"form-group-error\" : \"\"}`}>\r\n              <ComponentType qnData={question} showQuestionLabel={showQuestionLabel} errors={componentErrors} onValueChange={this.handleChange} />\r\n            </div>\r\n          );\r\n        })\r\n        }\r\n\r\n        <div>\r\n          <button className=\"btn btn-primary btn-small\" id=\"TestErrors\" onClick={this.onCheckErrors}> Check errors (for now) </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouterHooks(PageBase);"],"mappings":"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"},"metadata":{},"sourceType":"module"}