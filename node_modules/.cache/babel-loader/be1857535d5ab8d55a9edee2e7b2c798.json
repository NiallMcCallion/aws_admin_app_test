{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmcca\\\\source\\\\repos\\\\AWS.eForms\\\\AWS.eForms.ReactApp\\\\src\\\\views\\\\formLayout\\\\PageBaseTest.js\";\nimport React from 'react';\nimport getContactUsNameFormView from 'data/ContactUs-Name-FormView';\nimport getContactUsNameErrorList from 'data/ContactUs-Name-ErrorList';\nimport TextInputLcc from 'views/components/inputs/Text';\nimport MultiCheckboxInputLcc from 'views/components/inputs/MultiCheckbox';\nimport RadioInputLcc from 'views/components/inputs/Radio';\nimport TextareaInputLcc from 'views/components/inputs/Textarea';\nimport DateInputLcc from 'views/components/inputs/Date';\nimport TimeInputLcc from 'views/components/inputs/TimeInput';\nimport FileUploadInputLcc from 'views/components/inputs/FileUpload';\nimport DropdownInputLcc from 'views/components/inputs/Dropdown';\nimport CheckboxInputLcc from 'views/components/inputs/Checkbox';\nimport ParagraphLcc from 'views/components/display/Paragraph';\nimport ErrorSummaryLcc from 'views/components/ErrorSummaryLcc';\nimport withRouterHooks from 'helpers/withRouterHooks';\nimport getQuestionId from 'helpers/getQuestionId';\nimport { Navigate } from \"react-router-dom\";\nimport Description from 'views/components/display/Description';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Name extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      errors: []\n    };\n\n    this.validateForm = () => {\n      let errors = [];\n      let formIsValid = true; //Will be a lambda\n\n      let contactUsNameErrorList = getContactUsNameErrorList();\n      formIsValid = contactUsNameErrorList.errorList.length > 0 ? false : true;\n      errors = contactUsNameErrorList.errorList;\n      this.setState({\n        errors\n      });\n      return formIsValid;\n    };\n\n    this.onCheckErrors = event => {\n      //event.preventDefault();\n      if (this.validateForm()) {\n        console.log(\"valid\", this.state.errors);\n      } else {\n        console.log(\"invalid\", this.state.errors);\n      }\n    };\n  }\n\n  render() {\n    //let contactUsNameFormView = getContactUsNameFormView(); //Will be call to lambda\n    let contactUsNameFormView = require(\"../../forms/\" + this.props.params.form + \"/ConfigNew.json\");\n\n    let page = contactUsNameFormView.pages.find(page => page.name == this.props.params.page);\n    let qnCount = page.questions.length;\n\n    if (page === undefined) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/ErrorNotFound\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }, this);\n    }\n\n    const components = {\n      CheckboxInputLcc: CheckboxInputLcc,\n      TextInputLcc: TextInputLcc,\n      MultiCheckboxInputLcc: MultiCheckboxInputLcc,\n      RadioInputLcc: RadioInputLcc,\n      TextareaInputLcc: TextareaInputLcc,\n      DateInputLcc: DateInputLcc,\n      TimeInputLcc: TimeInputLcc,\n      FileUploadInputLcc: FileUploadInputLcc,\n      DropdownInputLcc: DropdownInputLcc,\n      Paragraph: ParagraphLcc,\n      Description: Description\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [qnCount > 1 || contactUsNameFormView.questions[0].componentType === \"CheckboxInputLcc\" ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading-large\",\n        children: contactUsNameFormView.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this) : null, this.state.errors.length > 0 ? /*#__PURE__*/_jsxDEV(ErrorSummaryLcc, {\n        errors: this.state.errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this) : null, page.questions.map(question => {\n        const ComponentType = components[question.componentType];\n        let componentErrors = [];\n        let thisQuestionsErrors = this.state.errors.filter(e => e.id === getQuestionId(question.name));\n\n        if (thisQuestionsErrors.length > 0) {\n          componentErrors = thisQuestionsErrors[0].errors;\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${componentErrors.length > 0 ? \"form-group-error\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(ComponentType, {\n            qnData: question,\n            qnCount: qnCount,\n            errors: componentErrors\n          }, getQuestionId(question.name), false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, question.name + \"FormGroup\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-small\",\n          id: \"TestErrors\",\n          onClick: this.onCheckErrors,\n          children: \" Check errors (for now) \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withRouterHooks(Name);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","getContactUsNameFormView","getContactUsNameErrorList","TextInputLcc","MultiCheckboxInputLcc","RadioInputLcc","TextareaInputLcc","DateInputLcc","TimeInputLcc","FileUploadInputLcc","DropdownInputLcc","CheckboxInputLcc","ParagraphLcc","ErrorSummaryLcc","withRouterHooks","getQuestionId","Navigate","Description","Name","Component","state","errors","validateForm","formIsValid","contactUsNameErrorList","errorList","length","setState","onCheckErrors","event","console","log","render","contactUsNameFormView","require","props","params","form","page","pages","find","name","qnCount","questions","undefined","components","Paragraph","componentType","displayName","map","question","ComponentType","componentErrors","thisQuestionsErrors","filter","e","id"],"sources":["C:/Users/nmcca/source/repos/AWS.eForms/AWS.eForms.ReactApp/src/views/formLayout/PageBaseTest.js"],"sourcesContent":["import React from 'react';\r\nimport getContactUsNameFormView from 'data/ContactUs-Name-FormView';\r\nimport getContactUsNameErrorList from 'data/ContactUs-Name-ErrorList';\r\nimport TextInputLcc from 'views/components/inputs/Text';\r\nimport MultiCheckboxInputLcc from 'views/components/inputs/MultiCheckbox';\r\nimport RadioInputLcc from 'views/components/inputs/Radio';\r\nimport TextareaInputLcc from 'views/components/inputs/Textarea';\r\nimport DateInputLcc from 'views/components/inputs/Date';\r\nimport TimeInputLcc from 'views/components/inputs/TimeInput';\r\nimport FileUploadInputLcc from 'views/components/inputs/FileUpload';\r\nimport DropdownInputLcc from 'views/components/inputs/Dropdown';\r\nimport CheckboxInputLcc from 'views/components/inputs/Checkbox';\r\nimport ParagraphLcc from 'views/components/display/Paragraph';\r\nimport ErrorSummaryLcc from 'views/components/ErrorSummaryLcc';\r\nimport withRouterHooks from 'helpers/withRouterHooks';\r\nimport getQuestionId from 'helpers/getQuestionId';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport Description from 'views/components/display/Description';\r\n\r\nclass Name extends React.Component {\r\n\r\n  state = {\r\n    errors: []\r\n  };\r\n\r\n  validateForm = () => {\r\n    let errors = [];\r\n    let formIsValid = true;\r\n\r\n    //Will be a lambda\r\n    let contactUsNameErrorList = getContactUsNameErrorList();\r\n\r\n    formIsValid = contactUsNameErrorList.errorList.length > 0 ? false : true;\r\n    errors = contactUsNameErrorList.errorList;\r\n\r\n    this.setState({ errors });\r\n\r\n    return formIsValid;\r\n  };\r\n\r\n  //This won't be here, just for dev purposes - will be on submit\r\n  onCheckErrors = event => {\r\n    //event.preventDefault();\r\n    if (this.validateForm()) {\r\n      console.log(\"valid\", this.state.errors);\r\n    }\r\n    else {\r\n      console.log(\"invalid\", this.state.errors);\r\n    }\r\n\r\n  };\r\n\r\n  render() {\r\n    //let contactUsNameFormView = getContactUsNameFormView(); //Will be call to lambda\r\n    let contactUsNameFormView = require(\"../../forms/\" + this.props.params.form + \"/ConfigNew.json\");\r\n    let page = contactUsNameFormView.pages.find(page => page.name == this.props.params.page);\r\n    let qnCount = page.questions.length;\r\n\r\n    if (page === undefined) {\r\n      return <Navigate to=\"/ErrorNotFound\" />;\r\n    }\r\n\r\n    const components = {\r\n      CheckboxInputLcc: CheckboxInputLcc,\r\n      TextInputLcc: TextInputLcc,\r\n      MultiCheckboxInputLcc: MultiCheckboxInputLcc,\r\n      RadioInputLcc: RadioInputLcc,\r\n      TextareaInputLcc: TextareaInputLcc,\r\n      DateInputLcc: DateInputLcc,\r\n      TimeInputLcc: TimeInputLcc,\r\n      FileUploadInputLcc: FileUploadInputLcc,\r\n      DropdownInputLcc: DropdownInputLcc,\r\n      Paragraph: ParagraphLcc,\r\n\r\n      Description: Description\r\n    };\r\n\r\n    return (\r\n      <>\r\n        {qnCount > 1 || contactUsNameFormView.questions[0].componentType === \"CheckboxInputLcc\"\r\n          ? <h1 className=\"heading-large\">{contactUsNameFormView.displayName}</h1>\r\n          : null}\r\n\r\n        {(this.state.errors.length > 0)\r\n          ? <ErrorSummaryLcc errors={this.state.errors} />\r\n          : null}\r\n\r\n        {page.questions.map((question) => {\r\n          const ComponentType = components[question.componentType];\r\n          let componentErrors = [];\r\n          let thisQuestionsErrors = this.state.errors.filter(e => e.id === getQuestionId(question.name));\r\n          if (thisQuestionsErrors.length > 0) {\r\n            componentErrors = thisQuestionsErrors[0].errors;\r\n          }\r\n\r\n          return (\r\n            <div key={question.name + \"FormGroup\"} className={`form-group ${componentErrors.length > 0 ? \"form-group-error\" : \"\"}`}>\r\n              <ComponentType key={getQuestionId(question.name)} qnData={question} qnCount={qnCount} errors={componentErrors} />\r\n            </div>\r\n          );\r\n        })\r\n        }\r\n\r\n        <div>\r\n          <button className=\"btn btn-primary btn-small\" id=\"TestErrors\" onClick={this.onCheckErrors}> Check errors (for now) </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouterHooks(Name);"],"mappings":"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"},"metadata":{},"sourceType":"module"}