{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmcca\\\\source\\\\repos\\\\aws_admin_app_test\\\\src\\\\canvas\\\\PagesCanvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, useNodesState, useEdgesState, Controls, MiniMap } from 'react-flow-renderer';\nimport Sidebar from '../QuestionsSidebar';\nimport 'index.css';\nimport 'button.css';\nimport ButtonEdge from '../ButtonEdge.js';\nimport getNewId from 'helpers/getNewId';\nimport getInitialNodes from 'helpers/getInitialNodes';\nimport StandardPage from 'components/nodeTypes/pageNodes/StandardPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = getInitialNodes();\nconst initialEdges = [{\n  id: 'e1-2',\n  source: 'IntroPage',\n  target: 'SummaryPage',\n  type: 'buttonedge'\n}];\nconst nodeTypes = {\n  standardpage: StandardPage\n};\nconst edgeTypes = {\n  buttonedge: ButtonEdge\n};\n\nconst getId = () => getNewId();\n\nfunction PagesCanvas() {\n  _s();\n\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), []);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n    console.log(event.target.id);\n  }, []);\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData('application/reactflow');\n\n    if (typeof type === 'undefined' || !type) {\n      // check if the dropped element is valid\n      return;\n    }\n\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      id: getId(),\n      type,\n      position,\n      data: {\n        label: `${type} node`\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, [reactFlowInstance]);\n  const addNode = useCallback(() => {\n    const id = getNewId();\n    const newNode = {\n      id,\n      position: {\n        x: Math.random() * 50,\n        y: Math.random() * 50\n      },\n      data: {\n        label: `${id}`\n      },\n      type: \"standardpage\"\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dndflow\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reactflow-wrapper\",\n        ref: reactFlowWrapper,\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          onInit: setReactFlowInstance,\n          onDrop: onDrop,\n          onDragOver: onDragOver,\n          nodeTypes: nodeTypes,\n          edgeTypes: edgeTypes,\n          fitView: true,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addNode,\n            className: \"btn-add\",\n            children: \"Add page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PagesCanvas, \"DXUXjw//LzrwjVdJX088diYFmkQ=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n\n_c = PagesCanvas;\n;\nexport default PagesCanvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"PagesCanvas\");","map":{"version":3,"names":["React","useState","useRef","useCallback","ReactFlow","ReactFlowProvider","addEdge","useNodesState","useEdgesState","Controls","MiniMap","Sidebar","ButtonEdge","getNewId","getInitialNodes","StandardPage","initialNodes","initialEdges","id","source","target","type","nodeTypes","standardpage","edgeTypes","buttonedge","getId","PagesCanvas","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","onConnect","params","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","console","log","onDrop","reactFlowBounds","current","getBoundingClientRect","getData","position","project","x","clientX","left","y","clientY","top","newNode","data","label","nds","concat","addNode","Math","random"],"sources":["C:/Users/nmcca/source/repos/aws_admin_app_test/src/canvas/PagesCanvas.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n  Controls,\r\n  MiniMap\r\n} from 'react-flow-renderer';\r\nimport Sidebar from '../QuestionsSidebar';\r\nimport 'index.css';\r\nimport 'button.css';\r\n\r\nimport ButtonEdge from '../ButtonEdge.js';\r\nimport getNewId from 'helpers/getNewId';\r\nimport getInitialNodes from 'helpers/getInitialNodes';\r\nimport StandardPage from 'components/nodeTypes/pageNodes/StandardPage';\r\n\r\nconst initialNodes = getInitialNodes();\r\n\r\nconst initialEdges = [\r\n  { id: 'e1-2', source: 'IntroPage', target: 'SummaryPage', type: 'buttonedge' },\r\n];\r\n\r\nconst nodeTypes = {\r\n  standardpage: StandardPage,\r\n};\r\n\r\nconst edgeTypes = {\r\n  buttonedge: ButtonEdge,\r\n};\r\n\r\nconst getId = () => getNewId();\r\n\r\nfunction PagesCanvas() {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n\r\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), []);\r\n\r\n  const onDragOver = useCallback((event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n    console.log(event.target.id);\r\n  }, []);\r\n\r\n  const onDrop = useCallback((event) => {\r\n    event.preventDefault();\r\n\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    const type = event.dataTransfer.getData('application/reactflow');\r\n\r\n    if (typeof type === 'undefined' || !type) {\r\n      // check if the dropped element is valid\r\n      return;\r\n    }\r\n\r\n    const position = reactFlowInstance.project({\r\n      x: event.clientX - reactFlowBounds.left,\r\n      y: event.clientY - reactFlowBounds.top,\r\n    });\r\n\r\n    const newNode = {\r\n      id: getId(),\r\n      type,\r\n      position,\r\n      data: { label: `${type} node` },\r\n    };\r\n\r\n    setNodes((nds) => nds.concat(newNode));\r\n  },\r\n    [reactFlowInstance]\r\n  );\r\n\r\n  const addNode = useCallback(() => {\r\n    const id = getNewId();\r\n    const newNode = {\r\n      id,\r\n      position: { x: Math.random() * 50, y: Math.random() * 50, },\r\n      data: { label: `${id}`, },\r\n      type: \"standardpage\"\r\n    };\r\n    setNodes((nds) => nds.concat(newNode));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dndflow\">\r\n      <ReactFlowProvider>\r\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n          <ReactFlow\r\n            nodes={nodes}\r\n            edges={edges}\r\n            onNodesChange={onNodesChange}\r\n            onEdgesChange={onEdgesChange}\r\n            onConnect={onConnect}\r\n            onInit={setReactFlowInstance}\r\n            onDrop={onDrop}\r\n            onDragOver={onDragOver}\r\n            nodeTypes={nodeTypes}\r\n            edgeTypes={edgeTypes}\r\n            fitView\r\n          >\r\n\r\n            <button onClick={addNode} className=\"btn-add\">\r\n              Add page\r\n            </button>\r\n\r\n            <Controls />\r\n            <MiniMap />\r\n          </ReactFlow>\r\n        </div>\r\n        <Sidebar />\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PagesCanvas;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,OAAOC,SAAP,IACEC,iBADF,EAEEC,OAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,QALF,EAMEC,OANF,QAOO,qBAPP;AAQA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAO,WAAP;AACA,OAAO,YAAP;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,YAAP,MAAyB,6CAAzB;;AAEA,MAAMC,YAAY,GAAGF,eAAe,EAApC;AAEA,MAAMG,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,MAAN;EAAcC,MAAM,EAAE,WAAtB;EAAmCC,MAAM,EAAE,aAA3C;EAA0DC,IAAI,EAAE;AAAhE,CADmB,CAArB;AAIA,MAAMC,SAAS,GAAG;EAChBC,YAAY,EAAER;AADE,CAAlB;AAIA,MAAMS,SAAS,GAAG;EAChBC,UAAU,EAAEb;AADI,CAAlB;;AAIA,MAAMc,KAAK,GAAG,MAAMb,QAAQ,EAA5B;;AAEA,SAASc,WAAT,GAAuB;EAAA;;EACrB,MAAMC,gBAAgB,GAAG1B,MAAM,CAAC,IAAD,CAA/B;EACA,MAAM,CAAC2B,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,IAAmCxB,aAAa,CAACS,YAAD,CAAtD;EACA,MAAM,CAACgB,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,IAAmC1B,aAAa,CAACS,YAAD,CAAtD;EACA,MAAM,CAACkB,iBAAD,EAAoBC,oBAApB,IAA4CnC,QAAQ,CAAC,IAAD,CAA1D;EAEA,MAAMoC,SAAS,GAAGlC,WAAW,CAAEmC,MAAD,IAAYL,QAAQ,CAAEM,GAAD,IAASjC,OAAO,CAACgC,MAAD,EAASC,GAAT,CAAjB,CAArB,EAAsD,EAAtD,CAA7B;EAEA,MAAMC,UAAU,GAAGrC,WAAW,CAAEsC,KAAD,IAAW;IACxCA,KAAK,CAACC,cAAN;IACAD,KAAK,CAACE,YAAN,CAAmBC,UAAnB,GAAgC,MAAhC;IACAC,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACrB,MAAN,CAAaF,EAAzB;EACD,CAJ6B,EAI3B,EAJ2B,CAA9B;EAMA,MAAM6B,MAAM,GAAG5C,WAAW,CAAEsC,KAAD,IAAW;IACpCA,KAAK,CAACC,cAAN;IAEA,MAAMM,eAAe,GAAGpB,gBAAgB,CAACqB,OAAjB,CAAyBC,qBAAzB,EAAxB;IACA,MAAM7B,IAAI,GAAGoB,KAAK,CAACE,YAAN,CAAmBQ,OAAnB,CAA2B,uBAA3B,CAAb;;IAEA,IAAI,OAAO9B,IAAP,KAAgB,WAAhB,IAA+B,CAACA,IAApC,EAA0C;MACxC;MACA;IACD;;IAED,MAAM+B,QAAQ,GAAGjB,iBAAiB,CAACkB,OAAlB,CAA0B;MACzCC,CAAC,EAAEb,KAAK,CAACc,OAAN,GAAgBP,eAAe,CAACQ,IADM;MAEzCC,CAAC,EAAEhB,KAAK,CAACiB,OAAN,GAAgBV,eAAe,CAACW;IAFM,CAA1B,CAAjB;IAKA,MAAMC,OAAO,GAAG;MACd1C,EAAE,EAAEQ,KAAK,EADK;MAEdL,IAFc;MAGd+B,QAHc;MAIdS,IAAI,EAAE;QAAEC,KAAK,EAAG,GAAEzC,IAAK;MAAjB;IAJQ,CAAhB;IAOAS,QAAQ,CAAEiC,GAAD,IAASA,GAAG,CAACC,MAAJ,CAAWJ,OAAX,CAAV,CAAR;EACD,CAxByB,EAyBxB,CAACzB,iBAAD,CAzBwB,CAA1B;EA4BA,MAAM8B,OAAO,GAAG9D,WAAW,CAAC,MAAM;IAChC,MAAMe,EAAE,GAAGL,QAAQ,EAAnB;IACA,MAAM+C,OAAO,GAAG;MACd1C,EADc;MAEdkC,QAAQ,EAAE;QAAEE,CAAC,EAAEY,IAAI,CAACC,MAAL,KAAgB,EAArB;QAAyBV,CAAC,EAAES,IAAI,CAACC,MAAL,KAAgB;MAA5C,CAFI;MAGdN,IAAI,EAAE;QAAEC,KAAK,EAAG,GAAE5C,EAAG;MAAf,CAHQ;MAIdG,IAAI,EAAE;IAJQ,CAAhB;IAMAS,QAAQ,CAAEiC,GAAD,IAASA,GAAG,CAACC,MAAJ,CAAWJ,OAAX,CAAV,CAAR;EACD,CAT0B,EASxB,EATwB,CAA3B;EAWA,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,uBACE,QAAC,iBAAD;MAAA,wBACE;QAAK,SAAS,EAAC,mBAAf;QAAmC,GAAG,EAAEhC,gBAAxC;QAAA,uBACE,QAAC,SAAD;UACE,KAAK,EAAEC,KADT;UAEE,KAAK,EAAEG,KAFT;UAGE,aAAa,EAAED,aAHjB;UAIE,aAAa,EAAEG,aAJjB;UAKE,SAAS,EAAEG,SALb;UAME,MAAM,EAAED,oBANV;UAOE,MAAM,EAAEW,MAPV;UAQE,UAAU,EAAEP,UARd;UASE,SAAS,EAAElB,SATb;UAUE,SAAS,EAAEE,SAVb;UAWE,OAAO,MAXT;UAAA,wBAcE;YAAQ,OAAO,EAAEyC,OAAjB;YAA0B,SAAS,EAAC,SAApC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAdF,eAkBE,QAAC,QAAD;YAAA;YAAA;YAAA;UAAA,QAlBF,eAmBE,QAAC,OAAD;YAAA;YAAA;YAAA;UAAA,QAnBF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAwBE,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QAxBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD;;GAnFQtC,W;UAEkCpB,a,EACAC,a;;;KAHlCmB,W;AAmFR;AAED,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}