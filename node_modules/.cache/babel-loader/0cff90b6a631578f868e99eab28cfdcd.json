{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmcca\\\\source\\\\repos\\\\AWS.eForms\\\\AWS.eForms.ReactApp\\\\src\\\\views\\\\components\\\\inputs\\\\CheckboxInputLcc.js\";\nimport React from 'react';\nimport ErrorMessageLcc from 'views/components/ErrorMessageLcc';\nimport HintLcc from 'views/components/HintLcc';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class CheckboxInputLcc extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isChecked: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.setState(prevState => ({\n      isChecked: !prevState.isChecked\n    }));\n  }\n\n  render() {\n    //TODO Should be label under input in React for the checkbox to be clickable, but block-label messes it up\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HintLcc, {\n        hint: this.props.qnData.hint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), this.props.errors.map(error => {\n        return /*#__PURE__*/_jsxDEV(ErrorMessageLcc, {\n          errorMessage: error.errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block-label\",\n        htmlFor: this.props.qnData.name,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: this.props.qnData.inputType,\n          id: this.props.qnData.id,\n          name: this.props.qnData.name,\n          value: this.props.qnData.value,\n          required: this.props.qnData.isRequired,\n          checked: this.state.isChecked,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form-label-bold\",\n          children: this.props.qnData.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"names":["React","ErrorMessageLcc","HintLcc","CheckboxInputLcc","Component","constructor","props","state","isChecked","handleChange","bind","setState","prevState","render","qnData","hint","errors","map","error","errorMessage","name","inputType","id","value","isRequired","displayName"],"sources":["C:/Users/nmcca/source/repos/AWS.eForms/AWS.eForms.ReactApp/src/views/components/inputs/CheckboxInputLcc.js"],"sourcesContent":["import React from 'react';\r\nimport ErrorMessageLcc from 'views/components/ErrorMessageLcc';\r\nimport HintLcc from 'views/components/HintLcc';\r\n\r\nexport default class CheckboxInputLcc extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isChecked: false };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange() {\r\n        this.setState(prevState => ({\r\n            isChecked: !prevState.isChecked\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        //TODO Should be label under input in React for the checkbox to be clickable, but block-label messes it up\r\n        return (\r\n            <>            \r\n                <HintLcc hint={this.props.qnData.hint} />\r\n                {this.props.errors.map((error) => {\r\n                    return <ErrorMessageLcc errorMessage={error.errorMessage} />\r\n                })\r\n                }   \r\n                \r\n                <label className=\"block-label\" htmlFor={this.props.qnData.name}>\r\n                    <input type={this.props.qnData.inputType} id={this.props.qnData.id} name={this.props.qnData.name} value={this.props.qnData.value} required={this.props.qnData.isRequired}\r\n                        checked={this.state.isChecked}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <span className=\"form-label-bold\">{this.props.qnData.displayName}</span>\r\n                </label>\r\n            </>\r\n        )\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,OAAP,MAAoB,0BAApB;;;AAEA,eAAe,MAAMC,gBAAN,SAA+BH,KAAK,CAACI,SAArC,CAA+C;EAC1DC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MAAEC,SAAS,EAAE;IAAb,CAAb;IACA,KAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;EACH;;EACDD,YAAY,GAAG;IACX,KAAKE,QAAL,CAAcC,SAAS,KAAK;MACxBJ,SAAS,EAAE,CAACI,SAAS,CAACJ;IADE,CAAL,CAAvB;EAGH;;EAEDK,MAAM,GAAG;IACL;IACA,oBACI;MAAA,wBACI,QAAC,OAAD;QAAS,IAAI,EAAE,KAAKP,KAAL,CAAWQ,MAAX,CAAkBC;MAAjC;QAAA;QAAA;QAAA;MAAA,QADJ,EAEK,KAAKT,KAAL,CAAWU,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;QAC9B,oBAAO,QAAC,eAAD;UAAiB,YAAY,EAAEA,KAAK,CAACC;QAArC;UAAA;UAAA;UAAA;QAAA,QAAP;MACH,CAFA,CAFL,eAOI;QAAO,SAAS,EAAC,aAAjB;QAA+B,OAAO,EAAE,KAAKb,KAAL,CAAWQ,MAAX,CAAkBM,IAA1D;QAAA,wBACI;UAAO,IAAI,EAAE,KAAKd,KAAL,CAAWQ,MAAX,CAAkBO,SAA/B;UAA0C,EAAE,EAAE,KAAKf,KAAL,CAAWQ,MAAX,CAAkBQ,EAAhE;UAAoE,IAAI,EAAE,KAAKhB,KAAL,CAAWQ,MAAX,CAAkBM,IAA5F;UAAkG,KAAK,EAAE,KAAKd,KAAL,CAAWQ,MAAX,CAAkBS,KAA3H;UAAkI,QAAQ,EAAE,KAAKjB,KAAL,CAAWQ,MAAX,CAAkBU,UAA9J;UACI,OAAO,EAAE,KAAKjB,KAAL,CAAWC,SADxB;UAEI,QAAQ,EAAE,KAAKC;QAFnB;UAAA;UAAA;UAAA;QAAA,QADJ,eAKI;UAAM,SAAS,EAAC,iBAAhB;UAAA,UAAmC,KAAKH,KAAL,CAAWQ,MAAX,CAAkBW;QAArD;UAAA;UAAA;UAAA;QAAA,QALJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAPJ;IAAA,gBADJ;EAiBH;;AA/ByD"},"metadata":{},"sourceType":"module"}