{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmcca\\\\source\\\\repos\\\\AWS.eForms\\\\AWS.eForms.ReactApp\\\\src\\\\helpers\\\\withParamsAndNavigate.js\";\nimport { useParams, useNavigate, useOutletContext } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function withParamsAndNavigate(Component) {\n  var _s = $RefreshSig$();\n\n  return _s(props => {\n    _s();\n\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      params: useParams(),\n      navigate: useNavigate(),\n      outletContext: useOutletContext()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 21\n    }, this);\n  }, \"WBr3AS9+yPtVqB01w31Ft3Tl8OQ=\", false, function () {\n    return [useParams, useNavigate, useOutletContext];\n  });\n}\n/**\r\n * useParams() gets the :parameter from the URL.\r\n *\r\n * DON'T START A FUNCTION NAME WITH 'use' - React expects this to be a hook and follow the rules of hooks.\r\n *\r\n * It can only be used inside a function, not a React component.\r\n * Therefore this wrapper class lets us pass it back into our components\r\n * so we can maintain consistency, instead of some components having\r\n * function wrappers.\r\n */","map":{"version":3,"names":["useParams","useNavigate","useOutletContext","withParamsAndNavigate","Component","props"],"sources":["C:/Users/nmcca/source/repos/AWS.eForms/AWS.eForms.ReactApp/src/helpers/withParamsAndNavigate.js"],"sourcesContent":["import { useParams, useNavigate, useOutletContext } from \"react-router-dom\";\r\n\r\nexport default function withParamsAndNavigate(Component) {\r\n    return props => <Component {...props} params={useParams()} navigate={useNavigate()} outletContext={useOutletContext()} />;\r\n}\r\n\r\n/**\r\n * useParams() gets the :parameter from the URL.\r\n *\r\n * DON'T START A FUNCTION NAME WITH 'use' - React expects this to be a hook and follow the rules of hooks.\r\n *\r\n * It can only be used inside a function, not a React component.\r\n * Therefore this wrapper class lets us pass it back into our components\r\n * so we can maintain consistency, instead of some components having\r\n * function wrappers.\r\n */"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,gBAAjC,QAAyD,kBAAzD;;AAEA,eAAe,SAASC,qBAAT,CAA+BC,SAA/B,EAA0C;EAAA;;EACrD,UAAOC,KAAK;IAAA;;IAAA,oBAAI,QAAC,SAAD,OAAeA,KAAf;MAAsB,MAAM,EAAEL,SAAS,EAAvC;MAA2C,QAAQ,EAAEC,WAAW,EAAhE;MAAoE,aAAa,EAAEC,gBAAgB;IAAnG;MAAA;MAAA;MAAA;IAAA,QAAJ;EAAA,CAAZ;IAAA,QAA8CF,SAA9C,EAAqEC,WAArE,EAAmGC,gBAAnG;EAAA;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}