{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmcca\\\\source\\\\repos\\\\aws_admin_app_test\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, useNodesState, useEdgesState, Controls, MiniMap } from 'react-flow-renderer';\nimport Sidebar from './Sidebar';\nimport './index.css';\nimport './button.css';\nimport ButtonEdge from './ButtonEdge.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: 'IntroPage',\n  //type: 'group',\n  data: {\n    label: 'Introduction page'\n  },\n  position: {\n    x: 0,\n    y: 0\n  },\n  style: {\n    width: 170,\n    height: 140\n  },\n  connectable: false,\n  //draggable: false,\n  sourcePosition: 'right',\n  targetPosition: 'left'\n}, {\n  id: 'Textbox1',\n  type: 'input',\n  data: {\n    label: 'My textbox'\n  },\n  position: {\n    x: 10,\n    y: 50\n  },\n  draggable: false,\n  parentNode: 'IntroPage',\n  extent: 'parent'\n}, {\n  id: 'SummaryPage',\n  //type: 'group',\n  data: {\n    label: 'Summary page'\n  },\n  position: {\n    x: 250,\n    y: 0\n  },\n  style: {\n    width: 170,\n    height: 140\n  },\n  connectable: false,\n  //draggable: false,\n  sourcePosition: 'right',\n  targetPosition: 'left'\n}];\nconst initialEdges = [{\n  id: 'e1-2',\n  source: 'IntroPage',\n  target: 'SummaryPage',\n  type: 'buttonedge'\n}];\nconst edgeTypes = {\n  buttonedge: ButtonEdge\n};\n\nconst getId = () => crypto.randomUUID();\n\nconst DnDFlow = () => {\n  _s();\n\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), []);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData('application/reactflow'); // check if the dropped element is valid\n\n    if (typeof type === 'undefined' || !type) {\n      return;\n    }\n\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      id: getId(),\n      type,\n      position,\n      data: {\n        label: `${type} node`\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, [reactFlowInstance]);\n  let nodeId = 0;\n  const onClick = useCallback(() => {\n    const id = `${++nodeId}`;\n    const newNode = {\n      id,\n      position: {\n        x: Math.random * 10,\n        x: Math.random * 10\n      },\n      data: {\n        label: `Node ${id}`\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dndflow\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reactflow-wrapper\",\n        ref: reactFlowWrapper,\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          onInit: setReactFlowInstance,\n          onDrop: onDrop,\n          onDragOver: onDragOver,\n          edgeTypes: edgeTypes,\n          fitView: true,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClick,\n            className: \"btn-add\",\n            children: \"add node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DnDFlow, \"HuXF0W/VCsh5LonrJd7jSgCvSEQ=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n\n_c = DnDFlow;\nexport default DnDFlow;\n\nvar _c;\n\n$RefreshReg$(_c, \"DnDFlow\");","map":{"version":3,"names":["React","useState","useRef","useCallback","ReactFlow","ReactFlowProvider","addEdge","useNodesState","useEdgesState","Controls","MiniMap","Sidebar","ButtonEdge","initialNodes","id","data","label","position","x","y","style","width","height","connectable","sourcePosition","targetPosition","type","draggable","parentNode","extent","initialEdges","source","target","edgeTypes","buttonedge","getId","crypto","randomUUID","DnDFlow","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","onConnect","params","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","getData","project","clientX","left","clientY","top","newNode","nds","concat","nodeId","onClick","Math","random"],"sources":["C:/Users/nmcca/source/repos/aws_admin_app_test/src/App.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n  Controls,\r\n  MiniMap\r\n} from 'react-flow-renderer';\r\nimport Sidebar from './Sidebar';\r\nimport './index.css';\r\nimport './button.css';\r\n\r\nimport ButtonEdge from './ButtonEdge.js';\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: 'IntroPage',\r\n    //type: 'group',\r\n    data: { label: 'Introduction page' },\r\n    position: { x: 0, y: 0 },\r\n    style: { width: 170, height: 140 },\r\n    connectable: false,\r\n    //draggable: false,\r\n    sourcePosition: 'right',\r\n    targetPosition: 'left'\r\n  },\r\n  {\r\n    id: 'Textbox1',\r\n    type: 'input',\r\n    data: { label: 'My textbox' },\r\n    position: { x: 10, y: 50 },\r\n    draggable: false,\r\n    parentNode: 'IntroPage',\r\n    extent: 'parent'\r\n  },\r\n  {\r\n    id: 'SummaryPage',\r\n    //type: 'group',\r\n    data: { label: 'Summary page' },\r\n    position: { x: 250, y: 0 },\r\n    style: { width: 170, height: 140 },\r\n    connectable: false,\r\n    //draggable: false,\r\n    sourcePosition: 'right',\r\n    targetPosition: 'left'\r\n  },\r\n];\r\n\r\nconst initialEdges = [\r\n  { id: 'e1-2', source: 'IntroPage', target: 'SummaryPage', type: 'buttonedge' },\r\n];\r\n\r\nconst edgeTypes = {\r\n  buttonedge: ButtonEdge,\r\n};\r\n\r\nconst getId = () => crypto.randomUUID();\r\n\r\nconst DnDFlow = () => {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n\r\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), []);\r\n\r\n  const onDragOver = useCallback((event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  }, []);\r\n\r\n  const onDrop = useCallback((event) => {\r\n    event.preventDefault();\r\n\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    const type = event.dataTransfer.getData('application/reactflow');\r\n\r\n    // check if the dropped element is valid\r\n    if (typeof type === 'undefined' || !type) {\r\n      return;\r\n    }\r\n\r\n    const position = reactFlowInstance.project({\r\n      x: event.clientX - reactFlowBounds.left,\r\n      y: event.clientY - reactFlowBounds.top,\r\n    });\r\n    const newNode = {\r\n      id: getId(),\r\n      type,\r\n      position,\r\n      data: { label: `${type} node` },\r\n    };\r\n\r\n    setNodes((nds) => nds.concat(newNode));\r\n  },\r\n    [reactFlowInstance]\r\n  );\r\n\r\n  let nodeId = 0;\r\n  const onClick = useCallback(() => {\r\n    const id = `${++nodeId}`;\r\n    const newNode = {\r\n      id,\r\n      position: {\r\n        x: Math.random * 10,\r\n        x: Math.random * 10,\r\n      },\r\n      data: {\r\n        label: `Node ${id}`,\r\n      },\r\n    };\r\n    setNodes((nds) => nds.concat(newNode));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dndflow\">\r\n      <ReactFlowProvider>\r\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n          <ReactFlow\r\n            nodes={nodes}\r\n            edges={edges}\r\n            onNodesChange={onNodesChange}\r\n            onEdgesChange={onEdgesChange}\r\n            onConnect={onConnect}\r\n            onInit={setReactFlowInstance}\r\n            onDrop={onDrop}\r\n            onDragOver={onDragOver}\r\n            edgeTypes={edgeTypes}\r\n            fitView\r\n          >\r\n            <button onClick={onClick} className=\"btn-add\">\r\n              add node\r\n            </button>\r\n            <Controls />\r\n            <MiniMap />\r\n          </ReactFlow>\r\n        </div>\r\n        <Sidebar />\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DnDFlow;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}