{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmcca\\\\source\\\\repos\\\\AWS.eForms\\\\AWS.eForms.ReactApp\\\\src\\\\views\\\\formLayout\\\\PageBase.js\";\nimport React from 'react';\nimport getContactUsNameErrorList from 'data/ContactUs-Name-ErrorList';\nimport TextInputLcc from 'views/components/inputs/Text';\nimport MultiCheckboxInputLcc from 'views/components/inputs/MultiCheckbox';\nimport RadioInputLcc from 'views/components/inputs/Radio';\nimport TextareaInputLcc from 'views/components/inputs/Textarea';\nimport DateInputLcc from 'views/components/inputs/Date';\nimport TimeInputLcc from 'views/components/inputs/Time';\nimport FileUploadInputLcc from 'views/components/inputs/FileUpload';\nimport DropdownInputLcc from 'views/components/inputs/Dropdown';\nimport CheckboxInputLcc from 'views/components/inputs/Checkbox';\nimport ParagraphLcc from 'views/components/display/Paragraph';\nimport ErrorSummaryLcc from 'views/components/display/ErrorSummary';\nimport withRouterHooks from 'helpers/withRouterHooks';\nimport getQuestionId from 'helpers/getQuestionId';\nimport { Navigate } from \"react-router-dom\";\nimport Description from 'views/components/display/Description';\nimport HeaderLarge from 'views/components/display/HeaderLarge';\nimport getQuestionCount from 'helpers/getQuestionCount';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PageBase extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      errors: []\n    };\n\n    this.validateForm = () => {\n      let errors = [];\n      let formIsValid = true; //Will be a lambda\n\n      let contactUsNameErrorList = getContactUsNameErrorList();\n      formIsValid = contactUsNameErrorList.errorList.length > 0 ? false : true;\n      errors = contactUsNameErrorList.errorList;\n      this.setState({\n        errors\n      });\n      return formIsValid;\n    };\n\n    this.onCheckErrors = event => {\n      //event.preventDefault();\n      if (this.validateForm()) {\n        console.log(\"valid\", this.state.errors);\n      } else {\n        console.log(\"invalid\", this.state.errors);\n      }\n    };\n  }\n\n  render() {\n    let formJson = require(\"../../forms/\" + this.props.params.form + \"/Config.json\"); //Will be call to lambda\n\n\n    let page = formJson.pages.find(page => page.name === this.props.params.page);\n\n    if (page === undefined) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/ErrorNotFound\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this);\n    }\n\n    const components = {\n      Checkbox: CheckboxInputLcc,\n      Text: TextInputLcc,\n      MultiCheckbox: MultiCheckboxInputLcc,\n      Radio: RadioInputLcc,\n      Textarea: TextareaInputLcc,\n      Date: DateInputLcc,\n      Time: TimeInputLcc,\n      FileUpload: FileUploadInputLcc,\n      Dropdown: DropdownInputLcc,\n      Paragraph: ParagraphLcc,\n      Description: Description\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [getQuestionCount(page) > 1 || page.questions[0].componentType === \"Checkbox\" ? /*#__PURE__*/_jsxDEV(HeaderLarge, {\n        displayName: page.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this) : null, this.state.errors.length > 0 ? /*#__PURE__*/_jsxDEV(ErrorSummaryLcc, {\n        errors: this.state.errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this) : null, page.questions.map(question => {\n        const ComponentType = components[question.componentType];\n        let componentErrors = [];\n        let thisQuestionsErrors = this.state.errors.filter(e => e.id === getQuestionId(question.name));\n\n        if (thisQuestionsErrors.length > 0) {\n          componentErrors = thisQuestionsErrors[0].errors;\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-group ${componentErrors.length > 0 ? \"form-group-error\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(ComponentType, {\n            qnData: question,\n            qnCount: qnCount,\n            errors: componentErrors\n          }, getQuestionId(question.name), false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, question.name + \"FormGroup\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-small\",\n          id: \"TestErrors\",\n          onClick: this.onCheckErrors,\n          children: \" Check errors (for now) \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withRouterHooks(PageBase);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","getContactUsNameErrorList","TextInputLcc","MultiCheckboxInputLcc","RadioInputLcc","TextareaInputLcc","DateInputLcc","TimeInputLcc","FileUploadInputLcc","DropdownInputLcc","CheckboxInputLcc","ParagraphLcc","ErrorSummaryLcc","withRouterHooks","getQuestionId","Navigate","Description","HeaderLarge","getQuestionCount","PageBase","Component","state","errors","validateForm","formIsValid","contactUsNameErrorList","errorList","length","setState","onCheckErrors","event","console","log","render","formJson","require","props","params","form","page","pages","find","name","undefined","components","Checkbox","Text","MultiCheckbox","Radio","Textarea","Date","Time","FileUpload","Dropdown","Paragraph","questions","componentType","displayName","map","question","ComponentType","componentErrors","thisQuestionsErrors","filter","e","id","qnCount"],"sources":["C:/Users/nmcca/source/repos/AWS.eForms/AWS.eForms.ReactApp/src/views/formLayout/PageBase.js"],"sourcesContent":["import React from 'react';\r\nimport getContactUsNameErrorList from 'data/ContactUs-Name-ErrorList';\r\nimport TextInputLcc from 'views/components/inputs/Text';\r\nimport MultiCheckboxInputLcc from 'views/components/inputs/MultiCheckbox';\r\nimport RadioInputLcc from 'views/components/inputs/Radio';\r\nimport TextareaInputLcc from 'views/components/inputs/Textarea';\r\nimport DateInputLcc from 'views/components/inputs/Date';\r\nimport TimeInputLcc from 'views/components/inputs/Time';\r\nimport FileUploadInputLcc from 'views/components/inputs/FileUpload';\r\nimport DropdownInputLcc from 'views/components/inputs/Dropdown';\r\nimport CheckboxInputLcc from 'views/components/inputs/Checkbox';\r\nimport ParagraphLcc from 'views/components/display/Paragraph';\r\nimport ErrorSummaryLcc from 'views/components/display/ErrorSummary';\r\nimport withRouterHooks from 'helpers/withRouterHooks';\r\nimport getQuestionId from 'helpers/getQuestionId';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport Description from 'views/components/display/Description';\r\nimport HeaderLarge from 'views/components/display/HeaderLarge';\r\nimport getQuestionCount from 'helpers/getQuestionCount';\r\n\r\nclass PageBase extends React.Component {\r\n  state = {\r\n    errors: []\r\n  };\r\n\r\n  validateForm = () => {\r\n    let errors = [];\r\n    let formIsValid = true;\r\n\r\n    //Will be a lambda\r\n    let contactUsNameErrorList = getContactUsNameErrorList();\r\n\r\n    formIsValid = contactUsNameErrorList.errorList.length > 0 ? false : true;\r\n    errors = contactUsNameErrorList.errorList;\r\n\r\n    this.setState({ errors });\r\n\r\n    return formIsValid;\r\n  };\r\n\r\n  //This won't be here, just for dev purposes - will be on submit\r\n  onCheckErrors = event => {\r\n    //event.preventDefault();\r\n    if (this.validateForm()) {\r\n      console.log(\"valid\", this.state.errors);\r\n    }\r\n    else {\r\n      console.log(\"invalid\", this.state.errors);\r\n    }\r\n\r\n  };\r\n\r\n  render() {\r\n    let formJson = require(\"../../forms/\" + this.props.params.form + \"/Config.json\"); //Will be call to lambda\r\n    let page = formJson.pages.find(page => page.name === this.props.params.page);\r\n\r\n    if (page === undefined) {\r\n      return <Navigate to=\"/ErrorNotFound\" />;\r\n    }\r\n\r\n    const components = {\r\n      Checkbox: CheckboxInputLcc,\r\n      Text: TextInputLcc,\r\n      MultiCheckbox: MultiCheckboxInputLcc,\r\n      Radio: RadioInputLcc,\r\n      Textarea: TextareaInputLcc,\r\n      Date: DateInputLcc,\r\n      Time: TimeInputLcc,\r\n      FileUpload: FileUploadInputLcc,\r\n      Dropdown: DropdownInputLcc,\r\n      Paragraph: ParagraphLcc,\r\n\r\n      Description: Description\r\n    };\r\n\r\n    return (\r\n      <>\r\n        {getQuestionCount(page) > 1 || page.questions[0].componentType === \"Checkbox\"\r\n          ? <HeaderLarge displayName={page.displayName} />\r\n          : null}\r\n\r\n        {(this.state.errors.length > 0)\r\n          ? <ErrorSummaryLcc errors={this.state.errors} />\r\n          : null}\r\n\r\n        {page.questions.map((question) => {\r\n          const ComponentType = components[question.componentType];\r\n          let componentErrors = [];\r\n          let thisQuestionsErrors = this.state.errors.filter(e => e.id === getQuestionId(question.name));\r\n          if (thisQuestionsErrors.length > 0) {\r\n            componentErrors = thisQuestionsErrors[0].errors;\r\n          }\r\n\r\n          return (\r\n            <div key={question.name + \"FormGroup\"} className={`form-group ${componentErrors.length > 0 ? \"form-group-error\" : \"\"}`}>\r\n              <ComponentType key={getQuestionId(question.name)} qnData={question} qnCount={qnCount} errors={componentErrors} />\r\n            </div>\r\n          );\r\n        })\r\n        }\r\n\r\n        <div>\r\n          <button className=\"btn btn-primary btn-small\" id=\"TestErrors\" onClick={this.onCheckErrors}> Check errors (for now) </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouterHooks(PageBase);"],"mappings":"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"},"metadata":{},"sourceType":"module"}